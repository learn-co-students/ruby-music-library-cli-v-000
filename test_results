106 examples, 37 failures
Failed examples:
rspec ./spec/009_music_importer_spec.rb:35 # Song .new_from_fil
ename initializes a song based on the passed-in filename
rspec ./spec/009_music_importer_spec.rb:43 # Song .new_from_fil
ename invokes the appropriate Findable methods so as to avoid d
uplicating objects
rspec ./spec/009_music_importer_spec.rb:58 # Song .create_from_
filename initializes and saves a song based on the passed-in fi
lename
rspec ./spec/009_music_importer_spec.rb:64 # Song .create_from_
filename invokes .new_from_filename instead of re-coding the sa
me functionality
rspec ./spec/009_music_importer_spec.rb:76 # MusicImporter #imp
ort imports the files into the library by invoking Song.create_
from_filename

rspec ./spec/010_music_library_controller_spec.rb:5 # MusicLibr
aryController #initialize accepts one argument, the path to the
 MP3 files to be imported
rspec ./spec/010_music_library_controller_spec.rb:9 # MusicLibr
aryController #initialize creates a new MusicImporter object, p
assing in the 'path' value
rspec ./spec/010_music_library_controller_spec.rb:15 # MusicLib
raryController #initialize the 'path' argument defaults to './d
b/mp3s'
rspec ./spec/010_music_library_controller_spec.rb:21 # MusicLib
raryController #initialize invokes the #import method on the cr
eated MusicImporter object
rspec ./spec/010_music_library_controller_spec.rb:34 # MusicLib
raryController #call welcomes the user
rspec ./spec/010_music_library_controller_spec.rb:50 # MusicLib
raryController #call asks the user for input
rspec ./spec/010_music_library_controller_spec.rb:58 # MusicLib
raryController #call loops and asks for user input until they t
ype in exit

rspec ./spec/011_music_library_cli_methods_spec.rb:8 # MusicLib
raryController - CLI Methods #list_songs prints all songs in th
e music library in a numbered list (alphabetized by song name)
rspec ./spec/011_music_library_cli_methods_spec.rb:18 # MusicLi
braryController - CLI Methods #list_songs is not hard-coded
rspec ./spec/011_music_library_cli_methods_spec.rb:29 # MusicLi
braryController - CLI Methods #list_artists prints all artists
in the music library in a numbered list (alphabetized by artist
 name)
rspec ./spec/011_music_library_cli_methods_spec.rb:38 # MusicLi
braryController - CLI Methods #list_artists is not hard-coded
rspec ./spec/011_music_library_cli_methods_spec.rb:51 # MusicLi
braryController - CLI Methods #list_genres prints all genres in
 the music library in a numbered list (alphabetized by genre na
me)
rspec ./spec/011_music_library_cli_methods_spec.rb:60 # MusicLi
braryController - CLI Methods #list_genres is not hard-coded
rspec ./spec/011_music_library_cli_methods_spec.rb:70 # MusicLi
braryController - CLI Methods #list_songs_by_artist prompts the
 user to enter an artist
rspec ./spec/011_music_library_cli_methods_spec.rb:78 # MusicLi
braryController - CLI Methods #list_songs_by_artist accepts use
r input

rspec ./spec/011_music_library_cli_methods_spec.rb:86 # MusicLi
braryController - CLI Methods #list_songs_by_artist prints all
songs by a particular artist in a numbered list (alphabetized b
y song name)
rspec ./spec/011_music_library_cli_methods_spec.rb:99 # MusicLi
braryController - CLI Methods #list_songs_by_artist does nothin
g if no matching artist is found
rspec ./spec/011_music_library_cli_methods_spec.rb:110 # MusicL
ibraryController - CLI Methods #list_songs_by_genre prompts the
 user to enter a genre
rspec ./spec/011_music_library_cli_methods_spec.rb:118 # MusicL
ibraryController - CLI Methods #list_songs_by_genre accepts use
r input
rspec ./spec/011_music_library_cli_methods_spec.rb:126 # MusicL
ibraryController - CLI Methods #list_songs_by_genre prints all
songs by a particular genre in a numbered list (alphabetized by
 song name)
rspec ./spec/011_music_library_cli_methods_spec.rb:136 # MusicL
ibraryController - CLI Methods #list_songs_by_genre does nothin
g if no matching genre is found

rspec ./spec/011_music_library_cli_methods_spec.rb:147 # MusicL
ibraryController - CLI Methods #play_song prompts the user to c
hoose a song from the alphabetized list output by #list_songs
rspec ./spec/011_music_library_cli_methods_spec.rb:157 # MusicL
ibraryController - CLI Methods #play_song accepts user input
rspec ./spec/011_music_library_cli_methods_spec.rb:165 # MusicL
ibraryController - CLI Methods #play_song upon receiving valid
input 'plays' the matching song from the alphabetized list outp
ut by #list_songs
rspec ./spec/011_music_library_cli_methods_spec.rb:174 # MusicL
ibraryController - CLI Methods #play_song does not 'puts' anyth
ing out if a matching song is not found
rspec ./spec/011_music_library_cli_methods_spec.rb:183 # MusicL
ibraryController - CLI Methods #play_song checks that the user
entered a number between 1 and the total number of songs in the
 library

rspec ./spec/012_music_library_cli_spec.rb:7 # MusicLibraryCont
roller - CLI Commands 'list songs' triggers #list_songs
rspec ./spec/012_music_library_cli_spec.rb:17 # MusicLibraryCon
troller - CLI Commands 'list artists' triggers #list_artists
rspec ./spec/012_music_library_cli_spec.rb:27 # MusicLibraryCon
troller - CLI Commands 'list genres' triggers #list_genres
rspec ./spec/012_music_library_cli_spec.rb:37 # MusicLibraryCon
troller - CLI Commands 'list artist' triggers #list_songs_by_ar
tist
rspec ./spec/012_music_library_cli_spec.rb:47 # MusicLibraryCon
troller - CLI Commands 'list genre' triggers #list_songs_by_gen
re
rspec ./spec/012_music_library_cli_spec.rb:57 # MusicLibraryCon
troller - CLI Commands 'play song' triggers #play_song
