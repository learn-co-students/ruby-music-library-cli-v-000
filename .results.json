{"version":"3.3.2","examples":[{"description":"accepts a name for the song","full_description":"Song Basics #initialize with #name accepts a name for the song","status":"passed","file_path":"./spec/001_song_basics_spec.rb","line_number":5,"run_time":0.000366,"pending_message":null},{"description":"sets the song name","full_description":"Song Basics #name= sets the song name","status":"passed","file_path":"./spec/001_song_basics_spec.rb","line_number":12,"run_time":9.6e-05,"pending_message":null},{"description":"returns the class variable @@all","full_description":"Song Basics .all returns the class variable @@all","status":"passed","file_path":"./spec/001_song_basics_spec.rb","line_number":21,"run_time":0.000944,"pending_message":null},{"description":"resets the @@all class variable to an empty array","full_description":"Song Basics .destroy_all resets the @@all class variable to an empty array","status":"passed","file_path":"./spec/001_song_basics_spec.rb","line_number":29,"run_time":7.6e-05,"pending_message":null},{"description":"adds the song instance to the @@all class variable","full_description":"Song Basics #save adds the song instance to the @@all class variable","status":"passed","file_path":"./spec/001_song_basics_spec.rb","line_number":38,"run_time":0.000648,"pending_message":null},{"description":"initializes and saves the song","full_description":"Song Basics .create initializes and saves the song","status":"passed","file_path":"./spec/001_song_basics_spec.rb","line_number":48,"run_time":7.6e-05,"pending_message":null},{"description":"accepts a name for the song","full_description":"Artist Basics #initialize with #name accepts a name for the song","status":"passed","file_path":"./spec/002_artist_basics_spec.rb","line_number":5,"run_time":5.7e-05,"pending_message":null},{"description":"sets the artist name","full_description":"Artist Basics #name= sets the artist name","status":"passed","file_path":"./spec/002_artist_basics_spec.rb","line_number":12,"run_time":6.6e-05,"pending_message":null},{"description":"returns the class variable @@all","full_description":"Artist Basics .all returns the class variable @@all","status":"passed","file_path":"./spec/002_artist_basics_spec.rb","line_number":21,"run_time":7.7e-05,"pending_message":null},{"description":"resets the @@all class variable to an empty array","full_description":"Artist Basics .destroy_all resets the @@all class variable to an empty array","status":"passed","file_path":"./spec/002_artist_basics_spec.rb","line_number":29,"run_time":5.5e-05,"pending_message":null},{"description":"adds the artist instance to the @@all class variable","full_description":"Artist Basics #save adds the artist instance to the @@all class variable","status":"passed","file_path":"./spec/002_artist_basics_spec.rb","line_number":38,"run_time":5.6e-05,"pending_message":null},{"description":"initializes and saves the artist","full_description":"Artist Basics .create initializes and saves the artist","status":"passed","file_path":"./spec/002_artist_basics_spec.rb","line_number":48,"run_time":5.6e-05,"pending_message":null},{"description":"accepts a name for the genre","full_description":"Genre Basics #initialize with #name accepts a name for the genre","status":"passed","file_path":"./spec/003_genre_basics_spec.rb","line_number":5,"run_time":5.5e-05,"pending_message":null},{"description":"sets the genre name","full_description":"Genre Basics #name= sets the genre name","status":"passed","file_path":"./spec/003_genre_basics_spec.rb","line_number":12,"run_time":5.3e-05,"pending_message":null},{"description":"returns the class variable @@all","full_description":"Genre Basics .all returns the class variable @@all","status":"passed","file_path":"./spec/003_genre_basics_spec.rb","line_number":21,"run_time":6.7e-05,"pending_message":null},{"description":"resets the @@all class variable to an empty array","full_description":"Genre Basics .destroy_all resets the @@all class variable to an empty array","status":"passed","file_path":"./spec/003_genre_basics_spec.rb","line_number":29,"run_time":6.8e-05,"pending_message":null},{"description":"adds the genre instance to the @@all class variable","full_description":"Genre Basics #save adds the genre instance to the @@all class variable","status":"passed","file_path":"./spec/003_genre_basics_spec.rb","line_number":38,"run_time":6.5e-05,"pending_message":null},{"description":"initializes and saves the genre","full_description":"Genre Basics .create initializes and saves the genre","status":"passed","file_path":"./spec/003_genre_basics_spec.rb","line_number":48,"run_time":5.2e-05,"pending_message":null},{"description":"initializes with a songs property set to an empty array","full_description":"Songs and Artists Artists have many songs initializes with a songs property set to an empty array","status":"passed","file_path":"./spec/004_songs_and_artists_spec.rb","line_number":5,"run_time":7.4e-05,"pending_message":null},{"description":"can push a song into the songs collection","full_description":"Songs and Artists Artists have many songs can push a song into the songs collection","status":"passed","file_path":"./spec/004_songs_and_artists_spec.rb","line_number":11,"run_time":5.2e-05,"pending_message":null},{"description":"accepts an artist for the song","full_description":"Songs and Artists Songs belong to an artist #artist= accepts an artist for the song","status":"passed","file_path":"./spec/004_songs_and_artists_spec.rb","line_number":22,"run_time":5.6e-05,"pending_message":null},{"description":"adds the song to the artist's songs","full_description":"Songs and Artists Songs belong to an artist #artist= adds the song to the artist's songs","status":"passed","file_path":"./spec/004_songs_and_artists_spec.rb","line_number":32,"run_time":7.6e-05,"pending_message":null},{"description":"adds the song to the artist's song collection","full_description":"Songs and Artists adding a song to an artist #add_song adds the song to the artist's song collection","status":"passed","file_path":"./spec/004_songs_and_artists_spec.rb","line_number":44,"run_time":7.9e-05,"pending_message":null},{"description":"assigns the artist to the song","full_description":"Songs and Artists adding a song to an artist #add_song assigns the artist to the song","status":"passed","file_path":"./spec/004_songs_and_artists_spec.rb","line_number":51,"run_time":5.2e-05,"pending_message":null},{"description":"does not assign the artist to the song if the song already has the artist","full_description":"Songs and Artists adding a song to an artist #add_song does not assign the artist to the song if the song already has the artist","status":"passed","file_path":"./spec/004_songs_and_artists_spec.rb","line_number":58,"run_time":0.004349,"pending_message":null},{"description":"does not add the song to the artist's song collection if the artist already has the song","full_description":"Songs and Artists adding a song to an artist #add_song does not add the song to the artist's song collection if the artist already has the song","status":"passed","file_path":"./spec/004_songs_and_artists_spec.rb","line_number":69,"run_time":0.000104,"pending_message":null},{"description":"uses add_song to add the song to the artist's collection","full_description":"Songs and Artists adding a song to an artist Song#artist= uses add_song to add the song to the artist's collection","status":"passed","file_path":"./spec/004_songs_and_artists_spec.rb","line_number":82,"run_time":0.000201,"pending_message":null},{"description":"new songs accept an optional argument for the artist","full_description":"Songs and Artists initializing a song with an artist new songs accept an optional argument for the artist","status":"passed","file_path":"./spec/004_songs_and_artists_spec.rb","line_number":94,"run_time":7.3e-05,"pending_message":null},{"description":"initializes with a songs property set to an empty array","full_description":"Songs and Genres Genres have many songs initializes with a songs property set to an empty array","status":"passed","file_path":"./spec/005_songs_and_genres_spec.rb","line_number":5,"run_time":5.4e-05,"pending_message":null},{"description":"can push a song into the genre's song collection","full_description":"Songs and Genres Genres have many songs can push a song into the genre's song collection","status":"passed","file_path":"./spec/005_songs_and_genres_spec.rb","line_number":11,"run_time":6.2e-05,"pending_message":null},{"description":"accepts an genre for the song","full_description":"Songs and Genres Songs belong to a genre #genre= accepts an genre for the song","status":"passed","file_path":"./spec/005_songs_and_genres_spec.rb","line_number":22,"run_time":6.6e-05,"pending_message":null},{"description":"adds the song to the genre's songs","full_description":"Songs and Genres Songs belong to a genre #genre= adds the song to the genre's songs","status":"passed","file_path":"./spec/005_songs_and_genres_spec.rb","line_number":30,"run_time":6.9e-05,"pending_message":null},{"description":"does not add the song to the genre's songs if it already exists","full_description":"Songs and Genres Songs belong to a genre #genre= does not add the song to the genre's songs if it already exists","status":"passed","file_path":"./spec/005_songs_and_genres_spec.rb","line_number":38,"run_time":7.4e-05,"pending_message":null},{"description":"songs accept an optional argument for the genre","full_description":"Songs and Genres initializing a song with a genre songs accept an optional argument for the genre","status":"passed","file_path":"./spec/005_songs_and_genres_spec.rb","line_number":52,"run_time":6.5e-05,"pending_message":null},{"description":"returns the unique genres belonging to all the songs of the artist","full_description":"Artists have many genres through songs #genres returns the unique genres belonging to all the songs of the artist","status":"passed","file_path":"./spec/006_artists_and_genres_spec.rb","line_number":5,"run_time":7.1e-05,"pending_message":null},{"description":"returns only unique genres for an artist if more than one song has the same genre","full_description":"Artists have many genres through songs #genres returns only unique genres for an artist if more than one song has the same genre","status":"passed","file_path":"./spec/006_artists_and_genres_spec.rb","line_number":15,"run_time":0.000124,"pending_message":null},{"description":"does not use an instance variable @genres and collects genres from songs everytime","full_description":"Artists have many genres through songs #genres does not use an instance variable @genres and collects genres from songs everytime","status":"passed","file_path":"./spec/006_artists_and_genres_spec.rb","line_number":28,"run_time":0.002662,"pending_message":null},{"description":"returns only unique artists for a genre when artists have multiple songs","full_description":"Genres have many artists through songs #artists returns only unique artists for a genre when artists have multiple songs","status":"passed","file_path":"./spec/006_artists_and_genres_spec.rb","line_number":46,"run_time":9.4e-05,"pending_message":null},{"description":"does not use an instance variable @artists and collects artists from songs everytime","full_description":"Genres have many artists through songs #artists does not use an instance variable @artists and collects artists from songs everytime","status":"passed","file_path":"./spec/006_artists_and_genres_spec.rb","line_number":60,"run_time":0.000147,"pending_message":null},{"description":"finds a song instance in @@all by the name property of the song","full_description":"Findable Songs .find_by_name finds a song instance in @@all by the name property of the song","status":"passed","file_path":"./spec/007_findable_songs_spec.rb","line_number":3,"run_time":0.000102,"pending_message":null},{"description":"finds or creates a song by name maintaining uniqueness of objects by their name property","full_description":"Findable Songs .find_or_create_by_name finds or creates a song by name maintaining uniqueness of objects by their name property","status":"passed","file_path":"./spec/007_findable_songs_spec.rb","line_number":12,"run_time":5.2e-05,"pending_message":null},{"description":"defines a module Concerns::Findable","full_description":"Concerns::Findable defines a module Concerns::Findable","status":"passed","file_path":"./spec/008_findable_module_spec.rb","line_number":4,"run_time":0.000256,"pending_message":null},{"description":"adds a find_by_name class method to classes that are extended by the module","full_description":"Concerns::Findable adds a find_by_name class method to classes that are extended by the module","status":"passed","file_path":"./spec/008_findable_module_spec.rb","line_number":13,"run_time":0.000642,"pending_message":null},{"description":"adds a find_or_create_by_name class method to classes that are extended by the module","full_description":"Concerns::Findable adds a find_or_create_by_name class method to classes that are extended by the module","status":"passed","file_path":"./spec/008_findable_module_spec.rb","line_number":17,"run_time":8.1e-05,"pending_message":null},{"description":"is extended by the Concerns::Findable module","full_description":"Artists and Genres being extended by Concerns::Findable Artist is extended by the Concerns::Findable module","status":"passed","file_path":"./spec/009_findable_artists_and_genres_spec.rb","line_number":3,"run_time":0.000111,"pending_message":null},{"description":"finds an artist instance in @@all by the name property of the artist","full_description":"Artists and Genres being extended by Concerns::Findable Artist .find_by_name finds an artist instance in @@all by the name property of the artist","status":"passed","file_path":"./spec/009_findable_artists_and_genres_spec.rb","line_number":9,"run_time":6.6e-05,"pending_message":null},{"description":"finds or creates an artist by name maintaining uniqueness of objects by name property","full_description":"Artists and Genres being extended by Concerns::Findable Artist .find_or_create_by_name finds or creates an artist by name maintaining uniqueness of objects by name property","status":"passed","file_path":"./spec/009_findable_artists_and_genres_spec.rb","line_number":18,"run_time":5.4e-05,"pending_message":null},{"description":"is extended by the Concerns::Findable module","full_description":"Artists and Genres being extended by Concerns::Findable Genre is extended by the Concerns::Findable module","status":"passed","file_path":"./spec/009_findable_artists_and_genres_spec.rb","line_number":27,"run_time":5.6e-05,"pending_message":null},{"description":"finds a genre instance in @@all by the name property of the genre","full_description":"Artists and Genres being extended by Concerns::Findable Genre .find_by_name finds a genre instance in @@all by the name property of the genre","status":"passed","file_path":"./spec/009_findable_artists_and_genres_spec.rb","line_number":33,"run_time":8.0e-05,"pending_message":null},{"description":"finds or creates a genre by name maintaining uniqueness of objects by name property","full_description":"Artists and Genres being extended by Concerns::Findable Genre .find_or_create_by_name finds or creates a genre by name maintaining uniqueness of objects by name property","status":"passed","file_path":"./spec/009_findable_artists_and_genres_spec.rb","line_number":42,"run_time":8.3e-05,"pending_message":null},{"description":"accepts a file path to parse mp3 files from","full_description":"MusicImporter #intialize accepts a file path to parse mp3 files from","status":"passed","file_path":"./spec/010_music_importer_spec.rb","line_number":5,"run_time":7.7e-05,"pending_message":null},{"description":"loads all the mp3 files in the path directory","full_description":"MusicImporter #files loads all the mp3 files in the path directory","status":"passed","file_path":"./spec/010_music_importer_spec.rb","line_number":14,"run_time":0.000134,"pending_message":null},{"description":"normalizes the filename to just the mp3 filename with no path","full_description":"MusicImporter #files normalizes the filename to just the mp3 filename with no path","status":"passed","file_path":"./spec/010_music_importer_spec.rb","line_number":21,"run_time":0.00018,"pending_message":null},{"description":"initializes a song based on the filename delimiters","full_description":"Making Songs from filenames Song.new_from_filename initializes a song based on the filename delimiters","status":"passed","file_path":"./spec/010_music_importer_spec.rb","line_number":35,"run_time":7.3e-05,"pending_message":null},{"description":"maintains unique objects","full_description":"Making Songs from filenames Song.new_from_filename maintains unique objects","status":"passed","file_path":"./spec/010_music_importer_spec.rb","line_number":43,"run_time":8.6e-05,"pending_message":null},{"description":"initializes and saves a song based on the filename delimiters","full_description":"Making Songs from filenames Song.create_from_filename initializes and saves a song based on the filename delimiters","status":"passed","file_path":"./spec/010_music_importer_spec.rb","line_number":54,"run_time":9.7e-05,"pending_message":null},{"description":"maintains unique objects","full_description":"Making Songs from filenames Song.create_from_filename maintains unique objects","status":"passed","file_path":"./spec/010_music_importer_spec.rb","line_number":62,"run_time":8.8e-05,"pending_message":null},{"description":"imports the files into the library by creating songs from a filename","full_description":"MusicImporter#import imports the files into the library by creating songs from a filename","status":"passed","file_path":"./spec/010_music_importer_spec.rb","line_number":74,"run_time":0.000152,"pending_message":null},{"description":"accepts a path to import music","full_description":"MusicLibraryController #initialize accepts a path to import music","status":"passed","file_path":"./spec/011_music_library_controller_spec.rb","line_number":5,"run_time":0.000961,"pending_message":null},{"description":"the path argument defaults to ./db/mp3s","full_description":"MusicLibraryController #initialize the path argument defaults to ./db/mp3s","status":"passed","file_path":"./spec/011_music_library_controller_spec.rb","line_number":9,"run_time":0.00172,"pending_message":null},{"description":"creates a MusicImporter with that path and imports the music","full_description":"MusicLibraryController #initialize creates a MusicImporter with that path and imports the music","status":"passed","file_path":"./spec/011_music_library_controller_spec.rb","line_number":14,"run_time":0.000285,"pending_message":null},{"description":"populates Song, Artist, and Genre","full_description":"MusicLibraryController #initialize populates Song, Artist, and Genre","status":"passed","file_path":"./spec/011_music_library_controller_spec.rb","line_number":22,"run_time":0.000299,"pending_message":null},{"description":"responds to a call method to start the CLI","full_description":"MusicLibraryController #call responds to a call method to start the CLI","status":"passed","file_path":"./spec/011_music_library_controller_spec.rb","line_number":34,"run_time":0.001514,"pending_message":null},{"description":"asks the user for input at some point","full_description":"MusicLibraryController #call asks the user for input at some point","status":"passed","file_path":"./spec/011_music_library_controller_spec.rb","line_number":38,"run_time":0.000277,"pending_message":null},{"description":"allows a user to list songs","full_description":"Music Library CLI allows a user to list songs","status":"passed","file_path":"./spec/012_musiclibrary_cli_spec.rb","line_number":3,"run_time":0.000504,"pending_message":null},{"description":"allows a user to list artists","full_description":"Music Library CLI allows a user to list artists","status":"passed","file_path":"./spec/012_musiclibrary_cli_spec.rb","line_number":17,"run_time":0.000469,"pending_message":null},{"description":"allows a user to list genres","full_description":"Music Library CLI allows a user to list genres","status":"passed","file_path":"./spec/012_musiclibrary_cli_spec.rb","line_number":30,"run_time":0.000502,"pending_message":null},{"description":"allows a user to play a song","full_description":"Music Library CLI allows a user to play a song","status":"passed","file_path":"./spec/012_musiclibrary_cli_spec.rb","line_number":44,"run_time":0.000679,"pending_message":null},{"description":"allows a user to list an artist's songs","full_description":"Music Library CLI allows a user to list an artist's songs","status":"passed","file_path":"./spec/012_musiclibrary_cli_spec.rb","line_number":55,"run_time":0.000583,"pending_message":null},{"description":"allows a user to list a genre's songs","full_description":"Music Library CLI allows a user to list a genre's songs","status":"passed","file_path":"./spec/012_musiclibrary_cli_spec.rb","line_number":67,"run_time":0.000559,"pending_message":null}],"summary":{"duration":0.02918,"example_count":70,"failure_count":0,"pending_count":0},"summary_line":"70 examples, 0 failures"}